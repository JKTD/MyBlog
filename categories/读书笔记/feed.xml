<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>读书笔记 on Fly With Bug</title>
    <link>http://blog.flywithme.top/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link>
    <description>Recent content in 读书笔记 on Fly With Bug</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <copyright>Copyright (c) 2015. All rights reserved.</copyright>
    <lastBuildDate>Tue, 15 Jan 2019 14:38:32 +0800</lastBuildDate>
    
	<atom:link href="http://blog.flywithme.top/categories/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/feed.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Nginx 配置 HTTPS 服务器</title>
      <link>http://blog.flywithme.top/2019/01/15/nginx/</link>
      <pubDate>Tue, 15 Jan 2019 14:38:32 +0800</pubDate>
      
      <guid>http://blog.flywithme.top/2019/01/15/nginx/</guid>
      <description>Nginx 配置 HTTPS 并不复杂，主要有两个步骤：签署第三方可信任的 SSL 证书 和 配置 HTTPS 我的证书是在腾讯云上申请的地址 nginx.conf 配置内容 user nginx; worker_processes 1; error_log /var/log/nginx/error.log warn; pid /var/run/nginx.pid; events { worker_connections 1024; } http { include</description>
    </item>
    
    <item>
      <title>mongodb的数据备份和恢复</title>
      <link>http://blog.flywithme.top/2019/01/13/mongodump/</link>
      <pubDate>Sun, 13 Jan 2019 10:45:59 +0800</pubDate>
      
      <guid>http://blog.flywithme.top/2019/01/13/mongodump/</guid>
      <description>数据库迁移 把当前服务器备份下来的数据迁移到另一个host服务器上，目录Path是当前备份的根目录 mongodump -u user -p pass -d doc_manager -o doc.dmp mongorestore -h host ./doc.dmp/doc_manager -u auth -p pass -d docmanager 本地处</description>
    </item>
    
    <item>
      <title>Vue上线后，history页面点击刷新按钮报错404问题</title>
      <link>http://blog.flywithme.top/2018/12/24/vue_webserver/</link>
      <pubDate>Mon, 24 Dec 2018 07:14:17 +0800</pubDate>
      
      <guid>http://blog.flywithme.top/2018/12/24/vue_webserver/</guid>
      <description>vue-router 默认 hash 模式 —— 使用 URL 的 hash 来模拟一个完整的 URL，于是当 URL 改变时，页面不会重新加载。 如果不想要很丑的 hash，可以用路由的 history 模式 ，这种模式充</description>
    </item>
    
    <item>
      <title>vue 路由重载之后导致history页面刷新空白问题fix</title>
      <link>http://blog.flywithme.top/2018/12/24/vue-element02/</link>
      <pubDate>Sun, 23 Dec 2018 06:57:21 +0800</pubDate>
      
      <guid>http://blog.flywithme.top/2018/12/24/vue-element02/</guid>
      <description>在vue项目的实际操作中，路由表配置需要根据用户角色进行动态过滤， 在每次刷新页面之后 更新用户权限表，然后根据权限表刷新动态配置 但是在刷新完路</description>
    </item>
    
    <item>
      <title>vue-element-admin 踩坑日记 01</title>
      <link>http://blog.flywithme.top/2018/12/22/vue-element-admin01/</link>
      <pubDate>Sat, 22 Dec 2018 06:57:21 +0800</pubDate>
      
      <guid>http://blog.flywithme.top/2018/12/22/vue-element-admin01/</guid>
      <description>vue-element-admin 是一个后台集成解决方案， 它基于 vue 和 element。它使用了最新的前端技术栈， 内置了 i18 国际化解决方案，动态路由，权限验证，提炼了典型的业务模</description>
    </item>
    
    <item>
      <title>gin api 跨域问题,cors</title>
      <link>http://blog.flywithme.top/2018/12/18/blocked-by-CORS-policy/</link>
      <pubDate>Tue, 18 Dec 2018 03:35:24 +0800</pubDate>
      
      <guid>http://blog.flywithme.top/2018/12/18/blocked-by-CORS-policy/</guid>
      <description>当一个资源从与该资源本身所在的服务器不同的域或端口请求一个资源时，资源会发起一个跨域 HTTP 请求。 出于安全原因，浏览器限制从脚本内发起的跨域 HTTP 请求</description>
    </item>
    
    <item>
      <title>MongoDB 用户名密码登录</title>
      <link>http://blog.flywithme.top/2018/12/10/mongodb/</link>
      <pubDate>Mon, 10 Dec 2018 06:53:01 +0800</pubDate>
      
      <guid>http://blog.flywithme.top/2018/12/10/mongodb/</guid>
      <description>MongoDB authentication MongoDB 默认直接连接，无须身份验证，如果当前机器可以公网访问，且不注意Mongodb 端口（默认 27017）的开放状态，那么Mongodb就会产</description>
    </item>
    
    <item>
      <title>nat</title>
      <link>http://blog.flywithme.top/2018/08/31/nat/</link>
      <pubDate>Fri, 31 Aug 2018 15:30:44 +0800</pubDate>
      
      <guid>http://blog.flywithme.top/2018/08/31/nat/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Elasticsearch 入门</title>
      <link>http://blog.flywithme.top/2018/04/02/note_28/</link>
      <pubDate>Mon, 02 Apr 2018 18:30:28 +0800</pubDate>
      
      <guid>http://blog.flywithme.top/2018/04/02/note_28/</guid>
      <description>简介 为什么要使用Elasticsearch Elasticsearch （ES）是一个基于 Lucene 的开源搜索引擎，它不但稳定、 可靠、快速，而且也具有良好的水平扩展能力，是专门</description>
    </item>
    
    <item>
      <title>Docker 入门</title>
      <link>http://blog.flywithme.top/2018/04/02/note_27/</link>
      <pubDate>Mon, 02 Apr 2018 17:33:59 +0800</pubDate>
      
      <guid>http://blog.flywithme.top/2018/04/02/note_27/</guid>
      <description>什么是Docker Docker是一个用来打包，装载和运行应用程序的一个轻量级容器的开源项目。 它的工作方式非常像虚拟机，包裹所有的东西（文件系</description>
    </item>
    
  </channel>
</rss>